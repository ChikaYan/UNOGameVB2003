Module Module1
    Structure Card
        Dim Type As Integer 's
        Dim Colour As Integer 'c
    End Structure

    Sub Convert(ByRef PlayerCard As Card)

        Select Case PlayerCard.Colour
            Case -1
                Console.Write("None ")
            Case 1
                Console.Write("Red ")
            Case 2
                Console.Write("Golden ")
            Case 3
                Console.Write("Green ")
            Case 4
                Console.Write("Blue ")
        End Select


        Select Case PlayerCard.Type
            Case -1
                Console.Write("None")
            Case 0 To 9
                Console.Write(PlayerCard.Type)
            Case 10
                Console.Write("Skip")
            Case 11
                Console.Write("Reverse")
            Case 12
                Console.Write("+2")
            Case 13
                Console.Write("Wild")
            Case 14
                Console.Write("Wild +4")
        End Select

    End Sub

    Sub SettingUpDeck(ByRef Deck() As Card)
        Dim i, j As Integer

        For i = 0 To 7 ' 123456789 skip skip +2 in four colours (2 each)
            For j = 0 To 11
                Deck(12 * i + j).Type = j + 1

                If i <= 3 Then
                    Deck(12 * i + j).Colour = i + 1
                Else
                    Deck(12 * i + j).Colour = i - 3
                End If
            Next
        Next

        For i = 96 To 99 '0 in four colours 
            Deck(i).Type = 0
            Deck(i).Colour = i - 95
        Next

        For i = 100 To 107
            Deck(i).Colour = 5 'c = 5 means wild
            If i <= 103 Then
                Deck(i).Type = 13
            Else
                Deck(i).Type = 14
            End If
        Next

    End Sub

    Sub Deal(ByRef PlayerHand() As Card, ByRef Deck() As Card, ByRef DealingPlace As Integer)
        Dim indicator As Integer

        Randomize()
        Do
            indicator = Int(Rnd() * 108)
        Loop Until Deck(indicator).Type <> -1

        PlayerHand(DealingPlace).Type = Deck(indicator).Type
        PlayerHand(DealingPlace).Colour = Deck(indicator).Colour
        Deck(indicator).Type = -1
        Deck(indicator).Colour = -1

        DealingPlace = DealingPlace + 1

    End Sub



    Sub SetUpHand(ByRef Player1Hand() As Card, ByRef Player2Hand() As Card, ByRef Deck() As Card, ByRef DealingPlaceP1 As Integer, ByRef DealingPlaceP2 As Integer)
        Dim i As Integer

        For i = 0 To 107  'clean all the hand
            Player1Hand(i).Type = -1
            Player1Hand(i).Colour = -1
            Player2Hand(i).Type = -1
            Player2Hand(i).Colour = -1
        Next
        DealingPlaceP1 = 0   'start dealling at 0
        DealingPlaceP2 = 0

        For i = 1 To 7 'deal 7 cards to p1 and p2 
            Deal(Player1Hand, Deck, DealingPlaceP1)
            Deal(Player2Hand, Deck, DealingPlaceP2)
        Next

    End Sub
    Sub DisplayHand(ByRef PlayerHand() As Card, ByRef DealingPlace As Integer)
        Dim i As Integer

        For i = 0 To DealingPlace - 1
            Console.Write(i + 1 & ". ")
            Convert(PlayerHand(i))
            Console.WriteLine()
        Next

    End Sub
    Sub RemoveCard(ByRef PlayerHand() As Card, ByRef CardNumber As Integer, ByRef DealingPlace As Integer)
        Dim counter As Integer

        For counter = CardNumber To DealingPlace - 2
            PlayerHand(counter).Type = PlayerHand(counter + 1).Type
            PlayerHand(counter).Colour = PlayerHand(counter + 1).Colour
        Next

        PlayerHand(DealingPlace - 1).Type = -1
        PlayerHand(DealingPlace - 1).Colour = -1

        DealingPlace = DealingPlace - 1

    End Sub
    Sub PlayCard(ByRef PlayerHand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlace As Integer, ByRef RequestNumber As Integer)
        Dim Validity As Boolean = False

        '-1: skip, -2: wild +4

        Validity = False

        If LastPlayed.Type = 10 Or LastPlayed.Type = 11 Then 'word card skip was played last turn
            RequestNumber = -1
            Validity = True

            LastPlayed.Type = 15 'Remove the type of this card

            Console.WriteLine()
            Console.WriteLine("Your turn has been skipped!")
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()

        End If

        If LastPlayed.Type = 14 Then  'word card wild +4 was played last turn
            RequestNumber = -2
            Validity = True
            Deal(PlayerHand, Deck, DealingPlace)
            Deal(PlayerHand, Deck, DealingPlace)
            Deal(PlayerHand, Deck, DealingPlace)
            Deal(PlayerHand, Deck, DealingPlace)

            LastPlayed.Type = 15 'remove the type of this card

            Console.WriteLine()
            Console.WriteLine("Your turn has been skipped!")
            Console.WriteLine("Draw four extra cards!")
            Console.WriteLine()
            Console.WriteLine()
            Console.WriteLine("Your current hand:")
            DisplayHand(PlayerHand, DealingPlace)
            Console.WriteLine()
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()

        End If

        Do While Validity = False
            Console.WriteLine("Please Enter the Number of Card to Play (Enter 0 to Draw A Card / Skip This Turn):")
            RequestNumber = Console.ReadLine()
            If RequestNumber <> 0 Then 'play a card
                If ((LastPlayed.Type = PlayerHand(RequestNumber - 1).Type Or LastPlayed.Colour = PlayerHand(RequestNumber - 1).Colour Or PlayerHand(RequestNumber - 1).Colour = 5) And (LastPlayed.Type <= 9 Or LastPlayed.Type = 15)) Or (LastPlayed.Type = 12 And PlayerHand(RequestNumber - 1).Type = 14) Or LastPlayed.Type = -1 Then 'last palyed is not word card, and valid / last played card is +2 and a wild +4 is used

                    LastPlayed.Type = PlayerHand(RequestNumber - 1).Type
                    LastPlayed.Colour = PlayerHand(RequestNumber - 1).Colour

                    Console.WriteLine()
                    Console.WriteLine()
                    Console.Write("Card: ")
                    Convert(PlayerHand(RequestNumber - 1))

                    Console.WriteLine(" has been played!")
                    If LastPlayed.Colour = 5 Then 'request colour for wild card played
                        Console.WriteLine()
                        Console.WriteLine("Name the next needed colour (1 means Red, 2 means Golden, 3 means Green, 4 means Blue):")

                        Do
                            LastPlayed.Colour = Console.ReadLine()
                            If LastPlayed.Colour = 1 Then
                                Console.WriteLine("Colour was set to Red")
                            ElseIf LastPlayed.Colour = 2 Then
                                Console.WriteLine("Colour was set to Golden")
                            ElseIf LastPlayed.Colour = 3 Then
                                Console.WriteLine("Colour was set to Green")
                            ElseIf LastPlayed.Colour = 4 Then
                                Console.WriteLine("Colour was set to Blue")
                            Else
                                LastPlayed.Colour = 9
                                Console.WriteLine("Invalid value! Please enter 1 for Red, 2 for Golden, 3 for Green, 4 for Blue")
                            End If
                        Loop Until LastPlayed.Colour <> 9
                    End If

                    RemoveCard(PlayerHand, RequestNumber - 1, DealingPlace)

                    Console.WriteLine()
                    Console.WriteLine("Your current hand:")
                    DisplayHand(PlayerHand, DealingPlace)
                    Console.WriteLine()
                    Console.WriteLine("Press any key to continue")
                    Console.ReadKey()

                    Validity = True

                Else 'Not valid
                    Console.WriteLine("You can't play this card!")
                    Console.WriteLine("Please choose another card to play")
                    Console.WriteLine()
                    Validity = False
                End If

            Else 'Draw card/skip turn (requestnumber = 0)
                Validity = True
            End If

        Loop

    End Sub
    Sub TurnP1(ByRef Player1Hand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlaceP1 As Integer)
        Dim RequestNumber As Integer

        Console.Clear()
        Console.WriteLine("P1's TURN")
        Console.WriteLine()
        Console.WriteLine("Displaying P1's hand")
        Console.WriteLine("P1's Hand: ")
        DisplayHand(Player1Hand, DealingPlaceP1)
        Console.WriteLine()
        Console.Write("The last card played is: ")
        Convert(LastPlayed)
        Console.WriteLine()

        PlayCard(Player1Hand, Deck, LastPlayed, DealingPlaceP1, RequestNumber) 'check valid / word card

        If RequestNumber = 0 Then 'draw a card then determine whether play card or not, otherwise the turn is finshed

            Deal(Player1Hand, Deck, DealingPlaceP1)
            Console.WriteLine()
            Console.WriteLine("Your current hand:")
            DisplayHand(Player1Hand, DealingPlaceP1)
            Console.WriteLine()
            Console.Write("The last card played is: ")
            Convert(LastPlayed)
            Console.WriteLine()

            PlayCard(Player1Hand, Deck, LastPlayed, DealingPlaceP1, RequestNumber) 'check valid / word card

            If RequestNumber = 0 Then 'skip the turn and punish +2
                If LastPlayed.Type = 12 Then '+2
                    Console.WriteLine("Draw two extra cards!")
                    Deal(Player1Hand, Deck, DealingPlaceP1)
                    Deal(Player1Hand, Deck, DealingPlaceP1)
                    LastPlayed.Type = 15

                    Console.WriteLine()
                    Console.WriteLine("Your current hand:")
                    DisplayHand(Player1Hand, DealingPlaceP1)
                    Console.WriteLine()
                    Console.WriteLine("Press any key to continue")
                    Console.ReadKey()
                End If
            End If
        End If

    End Sub
    Sub TurnP2(ByRef Player2Hand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlaceP2 As Integer)
        Dim RequestNumber As Integer

        Console.Clear()
        Console.WriteLine("P2's TURN")
        Console.WriteLine()
        Console.WriteLine("Displaying P2's hand")
        Console.WriteLine("P2's Hand: ")
        DisplayHand(Player2Hand, DealingPlaceP2)
        Console.WriteLine()
        Console.Write("The last card played is: ")
        Convert(LastPlayed)
        Console.WriteLine()

        PlayCard(Player2Hand, Deck, LastPlayed, DealingPlaceP2, RequestNumber) 'check valid / word card

        If RequestNumber = 0 Then 'draw a card then determine whether play card or not, otherwise the turn is finshed

            Deal(Player2Hand, Deck, DealingPlaceP2)
            Console.WriteLine()
            Console.WriteLine("Your current hand:")
            DisplayHand(Player2Hand, DealingPlaceP2)
            Console.WriteLine()
            Console.Write("The last card played is: ")
            Convert(LastPlayed)
            Console.WriteLine()

            PlayCard(Player2Hand, Deck, LastPlayed, DealingPlaceP2, RequestNumber) 'check valid / word card

            If RequestNumber = 0 Then 'skip the turn and punish +2
                If LastPlayed.Type = 12 Then '+2
                    Console.WriteLine("Draw two extra cards!")
                    Deal(Player2Hand, Deck, DealingPlaceP2)
                    Deal(Player2Hand, Deck, DealingPlaceP2)
                    LastPlayed.Type = 15

                    Console.WriteLine()
                    Console.WriteLine("Your current hand:")
                    DisplayHand(Player2Hand, DealingPlaceP2)
                    Console.WriteLine()
                    Console.WriteLine("Press any key to continue")
                    Console.ReadKey()
                End If
            End If
        End If

    End Sub

    Sub PlayGameWithPlayer(ByRef Player1Hand() As Card, ByRef Player2Hand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlaceP1 As Integer, ByRef DealingPlaceP2 As Integer)

        SetUpHand(Player1Hand, Player2Hand, Deck, DealingPlaceP1, DealingPlaceP2)
        LastPlayed.Type = -1 'First card has no restriction
        LastPlayed.Colour = -1

        Console.Clear()
        Console.WriteLine("GAME START")
        Console.WriteLine()
        Console.WriteLine()

        Do While DealingPlaceP1 <> 0 And DealingPlaceP2 <> 0

            TurnP1(Player1Hand, Deck, LastPlayed, DealingPlaceP1)

            If DealingPlaceP1 <> 0 Then
                TurnP2(Player2Hand, Deck, LastPlayed, DealingPlaceP2)
            End If

        Loop

        If DealingPlaceP1 = 0 Then
            Console.WriteLine()
            Console.WriteLine("P1 has won!")
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()
        End If

        If DealingPlaceP2 = 0 Then
            Console.WriteLine()
            Console.WriteLine("P2 has won!")
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()
        End If

    End Sub


    Sub TurnPlayer(ByRef Player1Hand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlaceP1 As Integer, ByRef AICardNumber As Integer)
        Dim RequestNumber As Integer

        Console.Clear()
        Console.WriteLine("YOUR TURN")
        Console.WriteLine()
        Console.WriteLine("Displaying your hand")
        Console.WriteLine("Your Hand: ")
        DisplayHand(Player1Hand, DealingPlaceP1)
        Console.WriteLine()
        Console.Write("The last card played is: ")
        Convert(LastPlayed)
        Console.WriteLine("Number of cards AI has is : " & AICardNumber)
        Console.WriteLine()

        PlayCard(Player1Hand, Deck, LastPlayed, DealingPlaceP1, RequestNumber) 'check valid / word card

        If RequestNumber = 0 Then 'draw a card then determine whether play card or not, otherwise the turn is finshed

            Deal(Player1Hand, Deck, DealingPlaceP1)
            Console.WriteLine()
            Console.WriteLine("Your current hand:")
            DisplayHand(Player1Hand, DealingPlaceP1)
            Console.WriteLine()
            Console.Write("The last card played is: ")
            Convert(LastPlayed)
            Console.WriteLine()

            PlayCard(Player1Hand, Deck, LastPlayed, DealingPlaceP1, RequestNumber) 'check valid / word card

            If RequestNumber = 0 Then 'skip the turn and punish +2
                If LastPlayed.Type = 12 Then '+2
                    Console.WriteLine("Draw two extra cards!")
                    Deal(Player1Hand, Deck, DealingPlaceP1)
                    Deal(Player1Hand, Deck, DealingPlaceP1)
                    LastPlayed.Type = 15

                    Console.WriteLine()
                    Console.WriteLine("Your current hand:")
                    DisplayHand(Player1Hand, DealingPlaceP1)
                    Console.WriteLine()
                    Console.WriteLine("Press any key to continue")
                    Console.ReadKey()
                End If
            End If
        End If

    End Sub


    Sub TurnAI(ByRef sp1() As Integer, ByRef cp1() As Integer, ByRef sp2() As Integer, ByRef cp2() As Integer, ByRef sdeck() As Integer, ByRef cdeck() As Integer, ByRef ns As Integer, ByRef nc As Integer, ByRef DealingPlaceP1 As Integer, ByRef DealingPlaceP2 As Integer)
        Dim i, s, c As Integer
        Dim Probability(107) As Single
        Dim unknown(14, 5) As Integer
        Dim UnknownNumber As Integer = 0

        'determine the unkonwn card in player's hand or deck
        For s = 0 To 14
            For c = 1 To 5
                unknown(s, c) = 0
            Next
        Next

        For i = 0 To 107
            For s = 0 To 14
                For c = 1 To 5
                    If sp1(i) = s And cp1(i) = c Then
                        unknown(s, c) += 1
                        UnknownNumber += 1
                    End If

                    If sdeck(i) = s And cdeck(i) = c Then
                        unknown(s, c) += 1
                        UnknownNumber += 1
                    End If
                Next
            Next
        Next



        'determine the card that can be played in this turn
        For i = 0 To 107
            Probability(i) = 0
        Next

        For i = 0 To DealingPlaceP2 - 1 'check hand
            If ((ns = sp2(i) Or nc = cp2(i)) And (ns <= 9 Or ns = 13)) Or (ns = 12 And sp2(i) = 14) Then 'last palyed is number card / +2 
                Probability(i) = 1
            End If
        Next

        'calculate the exact probability for each card
        If DealingPlaceP1 > 2 And DealingPlaceP2 > 2 Then  'early stage

            If DealingPlaceP1 < DealingPlaceP2 Then ' player in advantage

                For i = 0 To DealingPlaceP2 - 1
                    If Probability(i) = 1 Then 'this card can be played in this turn
                        Probability(i) = 0
                        If sp2(i) <= 9 Then 'calculate probability for number card

                            For s = 0 To 14
                                For c = 1 To 5
                                    If s = sp2(i) Or c = cp2(i) Then
                                        Probability(i) += unknown(s, c) 'shows the number of card in player's hand or deck that can follow if this card is played
                                    End If
                                Next
                            Next

                            Probability(i) = 1 - (Probability(i) / UnknownNumber) ' the proportion of cards that can not follow this card
                        Else 'probability of word cards
                            Select Case sp2(i)
                                Case 10 Or 11 'skip
                                    Probability(i) = 69 / 108 'always less than number card
                                Case 12


                            End Select



                        End If
                    End If

                Next


            End If


        End If


    End Sub



    Sub PlayGameWithAI(ByRef Player1Hand() As Card, ByRef Player2Hand() As Card, ByRef Deck() As Card, ByRef LastPlayed As Card, ByRef DealingPlaceP1 As Integer, ByRef DealingPlaceP2 As Integer)



        SetUpHand(Player1Hand, Player2Hand, Deck, DealingPlaceP1, DealingPlaceP2)
        LastPlayed.Type = -1 'First card has no restriction
        LastPlayed.Colour = -1

        Console.Clear()
        Console.WriteLine("GAME START")
        Console.WriteLine()
        Console.WriteLine()

        Do While DealingPlaceP1 <> 0 And DealingPlaceP2 <> 0

            TurnPlayer(Player1Hand, Deck, LastPlayed, DealingPlaceP1, DealingPlaceP2)

            If DealingPlaceP1 <> 0 Then
                'TurnAI(Player1Hand, Player2Hand, Deck, LastPlayed, DealingPlaceP1, DealingPlaceP2)

            End If

        Loop

        If DealingPlaceP1 = 0 Then
            Console.WriteLine()
            Console.WriteLine("You have won!")
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()
        End If

        If DealingPlaceP2 = 0 Then
            Console.WriteLine()
            Console.WriteLine("You have lost!")
            Console.WriteLine("Press any key to continue")
            Console.ReadKey()
        End If

    End Sub

    Sub Main()

        Dim MenuChoice As Integer
        Dim DealingPlaceP1, DealingPlaceP2 As Integer
        Dim Player1Hand(107), Player2Hand(107), Deck(107), LastPlayed As Card

        Do
            Console.Clear()
            ' Console.ForegroundColor() = ConsoleColor.Blue
            Console.WriteLine("UNO Games")
            Console.WriteLine("")
            Console.WriteLine("1. Play against AI (Under developing)")
            Console.WriteLine("2. Play against player")
            Console.WriteLine("0. End game")
            Console.WriteLine("")
            Console.WriteLine("Please enter your choice")

            MenuChoice = Console.ReadLine
            If MenuChoice = 1 Then
                SettingUpDeck(Deck)
                PlayGameWithAI(Player1Hand, Player2Hand, Deck, LastPlayed, DealingPlaceP1, DealingPlaceP2)


            ElseIf MenuChoice = 2 Then
                SettingUpDeck(Deck)
                PlayGameWithPlayer(Player1Hand, Player2Hand, Deck, LastPlayed, DealingPlaceP1, DealingPlaceP2)
            End If
        Loop Until MenuChoice = 0

    End Sub

End Module
